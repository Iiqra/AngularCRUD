@using System.Configuration;
@{
    ViewBag.Title = "Index";
    //var basepath = Convert.ToString(ConfigurationManager.AppSettings["apipath"]); // localhost base path
    //var controllerName = Convert.ToString(ViewContext.RouteData.Values["controller"]);// mvcController ka name ayega but we will use it for both controllers as we kept same names for api and mvc
    //var controllerAbsolutePath = VirtualPathUtility.ToAbsolute(string.Format(@"/api/{0}/", controllerName)); //api/controllerName laiyega
    //var apipath = basepath + controllerAbsolutePath; // localhost adress+ api/controllername-------------- localhost/api/product
}

<h2 style="color:grey;text-align:center">Come On! Let's play with Angular</h2>
<div style="margin-top:100px;margin-left:300px;">
    <div ng-controller="productController as prodCtrl">
        <h4>Add Product</h4>
        <div style="display:inline">
             Product Name
            <input type="text" ng-model="prodCtrl.Product.Name" />
            Product Description
            <textarea ng-model="prodCtrl.Product.Description"></textarea>
            <input type="button" value="Save" ng-click="prodCtrl.SaveProduct()" />
            {{prodCtrl.Product}}
        </div>
        <div>
<h2>Available Products</h2>            
            <table border="1">
                <thead>
                    <tr>
                        <td>Name</td>
                        <td>Description</td>
                        <td>Modify</td>
                        <td>Delete</td>
                    </tr>
                </thead>
                <tr ng-repeat="product in prodCtrl.productList">
                    <td ng-bind="product.Name"></td>
                    <td ng-bind="product.Description"></td>
                    <td><a href="javascript:void(0)" ng-click="prodCtrl.GetProduct(product.Id)">Edit</a></td>
                    <td><a href="javascript:void(0)" ng-click="prodCtrl.DeleteProduct(product.Id)">Delete</a></td>
                </tr>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">
    @*var productApiPath = {};// object in Js OR json format
    productApiPath.Path = '@apipath'; // to use this path on client side, we are passing from razor to js... we will get basepath/api/product*@
</script>


